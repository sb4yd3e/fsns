<?php

/*
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */

class Orders_model extends CI_Model
{
    var $table = 'orders';
    var $column_order = array('oid', 'shipping_name', 'order_type', 'total_product', 'order_status', 'total_amount', null);
    var $column_search = array('oid', 'shipping_name', 'order_type', 'total_product', 'order_status', 'total_amount');
    var $order = array('oid' => 'desc');

    function __construct()
    {
        parent::__construct();
        $this->load->database();
    }

    private function _get_datatables_query()
    {

        $this->db->from($this->table);

        $i = 0;

        foreach ($this->column_search as $item) {
            if ($_POST['search']['value']) {
                if ($i === 0) {
                    $this->db->group_start();
                    $this->db->like($item, $_POST['search']['value']);
                } else {
                    $this->db->or_like($item, $_POST['search']['value']);
                }
                if (count($this->column_search) - 1 == $i)
                    $this->db->group_end();
            }
            $i++;
        }

        if (isset($_POST['order_type']) && $_POST['order_type'] != "") {
            $this->db->where("order_type", $_POST['order_type']);
        }

        if (isset($_POST['uid']) && $_POST['uid'] != "") {
            $this->db->where("uid", $_POST['uid']);
        }
        if (isset($_POST['status']) && $_POST['status'] != "") {
            $this->db->where("order_status", $_POST['status']);
        }

        if (is_group('sale')) {
            $user = $this->session->userdata('fnsn');
            $this->db->where("sale_id", $user['aid']);
        }

        if (isset($_POST['order'])) {
            $this->db->order_by($this->column_order[$_POST['order']['0']['column']], $_POST['order']['0']['dir']);
        } else if (isset($this->order)) {
            $order = $this->order;
            $this->db->order_by(key($order), $order[key($order)]);
        }
    }


    function get_order($id)
    {
        return $this->db->get_where($this->table, array('oid' => $id))->row_array();
    }

    function get_user_order($uid,$id)
    {
        return $this->db->select('oid,at_date,amount,spacial_amount,coupon_code,discount,discount_100k,shipping_amount,vat_amount,total_amount,shipping_name,shipping_address,shipping_province,shipping_zip,billing_name,billing_address,billing_province,billing_zip,order_status')->order_by('oid','desc')->get_where($this->table, array('oid' => $id,'uid'=>$uid))->row_array();
    }

    function get_order_detail($id){

    }

    function get_all_orders()
    {
        $this->_get_datatables_query();
        if (is_group('sale')) {
            $user = $this->session->userdata('fnsn');
            $this->db->where("sale_id", $user['aid']);
        }
        if ($_POST['length'] != -1)
            $this->db->limit($_POST['length'], $_POST['start']);
        $query = $this->db->get();
        return $query->result();
    }

    function count_filtered()
    {
        $this->_get_datatables_query();
        if (is_group('sale')) {
            $user = $this->session->userdata('fnsn');
            $this->db->where("sale_id", $user['aid']);
        }
        $query = $this->db->get();
        return $query->num_rows();
    }

    public function count_all()
    {
        $this->db->from($this->table);
        if (is_group('sale')) {
            $user = $this->session->userdata('fnsn');
            $this->db->where("sale_id", $user['aid']);
        }
        return $this->db->count_all_results();
    }

    function add_order($params)
    {
        $this->db->insert($this->table, $params);
        return $this->db->insert_id();
    }


    function save_order($id, $params)
    {
        $this->db->where('oid', $id);
        return $this->db->update($this->table, $params);

    }


    function delete_order($id)
    {
        return $response = $this->db->delete($this->table, array('oid' => $id));

    }

    function list_products($oid)
    {
        return $this->db->where('oid', $oid)->get('order_details')->result_array();
    }

    function list_all_products()
    {
        return $this->db->where('online', 1)->where('in_stock', 1)->get('products')->result_array();
    }

    function list_all_attribute($pid)
    {
        return $this->db->where('pid', $pid)->where('in_stock', 1)->get('product_attribute')->result_array();
    }

    function get_attribute($aid)
    {
        return $this->db->where('pa_id', $aid)->get('product_attribute')->row_array();
    }

    function list_status($oid)
    {
        return $this->db->where('oid', $oid)->order_by('osid', 'desc')->get('order_status')->result_array();
    }

    function list_files($oid, $type = '', $uid = '', $aid = '')
    {
        if ($type == '') {
            return $this->db->where('oid', $oid)->get('order_files')->result_array();
        } elseif ($type == 'customer') {
            return $this->db->where('oid', $oid)->where('uid', $uid)->order_by('ufid', 'desc')->get('order_files')->result_array();
        } else if ($type == 'customer_all') {
            return $this->db->where('oid', $oid)->where('aid', 0)->order_by('ufid', 'desc')->get('order_files')->result_array();
        } elseif ($type == 'seller') {
            return $this->db->where('oid', $oid)->where('uid', 0)->order_by('ufid', 'desc')->get('order_files')->result_array();
        }
    }

    function get_coupon($code)
    {
        return $this->db->select('discount')->where('code', strtolower($code))->where('expired >', time())->get('coupons')->row_array();
    }

    function get_order_product($id, $paid)
    {
        $this->db->where('oid', $id);
        if (is_group('sale')) {
            $user = $this->session->userdata('fnsn');
            $this->db->where("sale_id", $user['aid']);
        }
        return $this->db->where('pa_id', $paid)->get('order_details')->row_array();
    }

    function save_order_product($id, $paid, $data)
    {
        return $this->db->where('oid', $id)->where('pa_id', $paid)->update('order_details', $data);
    }

    function add_order_product($id, $data)
    {
        return $this->db->insert('order_details', $data);
    }

    function delete_order_product($id, $paid)
    {
        return $this->db->where_not_in('pa_id', $paid)->delete('order_details');
    }

    function add_document($params)
    {
         $this->db->insert('order_files', $params);
        return $this->db->insert_id();
    }

    function get_file($fid)
    {
        return $this->db->where('ufid', $fid)->get('order_files')->row_array();
    }
    function list_order_by_user($uid)
    {
        return $this->db->where('uid', $uid)->order_by('oid','desc')->get('orders')->result_array();
    }

    function delete_file($fid)
    {
        $file = $this->db->where('ufid', $fid)->get('order_files')->row_array();
        @unlink(ORDER_PATH . '/' . $file['file_paht']);
        return $this->db->where('ufid', $fid)->delete('order_files');
    }

    function save_status($data)
    {
        $this->db->where('oid', $data['oid'])->update('orders', array('order_status' => $data['status']));
        return $this->db->insert('order_status', $data);
    }

    function update_order_all_product_status($oid, $data)
    {
        $this->db->where('oid', $oid)->update('order_details', $data);
    }

    function update_order_product_status($odid, $data)
    {
        $this->db->where('odid', $odid)->update('order_details', $data);
    }
    function update_order_product_success($id)
    {
        $this->db->where('oid', $id)->update('order_details', array('status'=>'success'));
    }

    function get_shipping_address($uid){
        return $this->db->select('shipping_name,shipping_address,shipping_province,shipping_zip,billing_name,billing_address,billing_province,billing_zip')->where('uid',$uid)->get('users')->row_array();
    }

    function list_timeline($oid){
        return $this->db->select('at_date,process_type,process_title,process_detail')->where('oid',$oid)->order_by('opid','desc')->get('order_process')->result_array();
    }
    function check_status_shipping($id){
        return $this->db->select('odid')->where('oid',$id)->where('status','pending')->get('order_details')->result();
    }
}
